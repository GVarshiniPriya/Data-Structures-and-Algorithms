#include<iostream> 
#include<string> 
using namespace std; 
struct Stack { 
char elem[100]; 
int top; 
}; 
void push(Stack *s, char item) { 
  if (s->top == 99) 
       cout << "Stack full"; 
   else 
      s->elem[++s->top] = item;
} 
bool isempty(Stack *s) { 
        return s->top == -1; }
char pop(Stack *s) { 
      if (s->top == -1) { 
         cout << "Stack empty";
         return -1;  } 
      else 
       return s->elem[s->top--]; 
 } 
bool areBracketsBalanced(string expr) { char x; 
 Stack s; 
  s.top = -1;  
  for (int i = 0; i < expr.length(); i++) 
{ 
switch (expr[i]) { 
     case '(': 
      case '[': 
      case '{': 
            push(&s, expr[i]); 
            break; 
     case ')': 
            if (isempty(&s) || pop(&s) != '(') return false; 
           break; 
    case '}': 
       if (isempty(&s) || pop(&s) != '{') return false; 
         break; 
   case ']': 
         if (isempty(&s) || pop(&s) != '[') 
         return false; 
       break; 
default: 
     break; } 
  }
 return isempty(&s); 
} 
int main() { 
string expr; 
cout<<"Input the string : "<<endl; 
cin>>expr; 
if (areBracketsBalanced(expr)) 
  cout << "Balanced"; 
else 
     cout << "Not Balanced"; 
return 0; } 
